#Number of path per species
m1<- glmer.nb (P ~ Treat + ( 1| plantesName), data = conn_sp)
summary(m1) #we choose this model after applied AIC (compared also with poisson)
#overdispersion
overdisp_fun<- function(model) {
vpars<- function(m) {
nrow(m)*(nrow(m)+1)/2
}
model.df<- sum(sapply(VarCorr(model),vpars))+length(fixef(model))
(rdf<- nrow(model@frame)-model.df)
rp<- residuals(model)
Pearson.chisq<- sum(rp^2)
prat<- Pearson.chisq/rdf
pval<- pchisq(Pearson.chisq, df=rdf, lower.tail=FALSE,log.p=TRUE)
c(chisq=Pearson.chisq,ratio=prat,p=exp(pval))
}
overdisp_fun(m1)
# test if presence of plants connecting layers change between treatments --
m1<-glmer (Connect ~ Treat + ( 1| plantesName), family = binomial(link="logit"), data = conn_sp)
summary(m1)
#Homogeneity
EM<-resid(m1, type= "deviance")
FM<-fitted(m1)
plot(x=FM, y=EM, xlab = "Ajustados", ylab = "Residuales normalizados")
abline(0,0, col="red", lwd= 3) #da lindo
#Number of path per species
m1<- glmer.nb (P ~ Treat + ( 1| plantesName), data = conn_sp)
summary(m1)
#overdispersion
overdisp_fun<- function(model) {
vpars<- function(m) {
nrow(m)*(nrow(m)+1)/2
}
model.df<- sum(sapply(VarCorr(model),vpars))+length(fixef(model))
(rdf<- nrow(model@frame)-model.df)
rp<- residuals(model)
Pearson.chisq<- sum(rp^2)
prat<- Pearson.chisq/rdf
pval<- pchisq(Pearson.chisq, df=rdf, lower.tail=FALSE,log.p=TRUE)
c(chisq=Pearson.chisq,ratio=prat,p=exp(pval))
}
overdisp_fun(m1)
#Homogeneity (residuals vs fitted values)
EM<-resid(m1, type= "deviance")
FM<-fitted(m1)
plot(x=FM, y=EM, xlab = "Ajustados", ylab = "Residuales normalizados")
abline(0,0, col="red", lwd= 3) #da lindo
#Homogeneity (residuals vs fitted values)
EM<-resid(m1, type= "deviance")
FM<-fitted(m1)
plot(x=FM, y=EM, xlab = "Ajustados", ylab = "Residuales normalizados")
abline(0,0, col="red", lwd= 3)
#Number of path per species
m2<- glmer.nb (P ~ Treat + ( 1| plantesName), data = conn_sp)
summary(m1)
#Number of path per species
m2<- glmer.nb (P ~ Treat + ( 1| plantesName), data = conn_sp)
summary(m2)
#overdispersion
overdisp_fun<- function(model) {
vpars<- function(m) {
nrow(m)*(nrow(m)+1)/2
}
model.df<- sum(sapply(VarCorr(model),vpars))+length(fixef(model))
(rdf<- nrow(model@frame)-model.df)
rp<- residuals(model)
Pearson.chisq<- sum(rp^2)
prat<- Pearson.chisq/rdf
pval<- pchisq(Pearson.chisq, df=rdf, lower.tail=FALSE,log.p=TRUE)
c(chisq=Pearson.chisq,ratio=prat,p=exp(pval))
}
overdisp_fun(m2)
#Homogeneity (residuals vs fitted values)
EM<-resid(m2, type= "deviance")
FM<-fitted(m2)
plot(x=FM, y=EM, xlab = "Ajustados", ylab = "Residuales normalizados")
abline(0,0, col="red", lwd= 3)
#Independence (residuals against treatment)
boxplot(EM~conn_sp$Treat, main="Tratamiento")
#final matrix
conn_sp<-rbind(conn_sp_NI,conn_sp_I)
# test if presence of plants connecting layers change between treatments --
m1<-glmer (Connect ~ Treat + ( 1| plantesName), family = binomial(link="logit"), data = conn_sp)
summary(m1)
#Homogeneity
EM<-resid(m1, type= "deviance")
FM<-fitted(m1)
plot(x=FM, y=EM, xlab = "Ajustados", ylab = "Residuales normalizados")
abline(0,0, col="red", lwd= 3)
#independence
E1_lme<-resid(m1, type= "deviance")
boxplot(E1_lme~conn_sp$Treat, main="Tratamiento")
# test if Number and prop of path per species connecting layer change between treatment--
conn_sp <-conn_sp%>%
filter(P>0)#filter only plants connecting layers
#Number of path per species
m2<- glmer.nb (P ~ Treat + ( 1| plantesName), data = conn_sp)
summary(m2)
#overdispersion
overdisp_fun<- function(model) {
vpars<- function(m) {
nrow(m)*(nrow(m)+1)/2
}
model.df<- sum(sapply(VarCorr(model),vpars))+length(fixef(model))
(rdf<- nrow(model@frame)-model.df)
rp<- residuals(model)
Pearson.chisq<- sum(rp^2)
prat<- Pearson.chisq/rdf
pval<- pchisq(Pearson.chisq, df=rdf, lower.tail=FALSE,log.p=TRUE)
c(chisq=Pearson.chisq,ratio=prat,p=exp(pval))
}
overdisp_fun(m2)
#Homogeneity (residuals vs fitted values)
EM<-resid(m2, type= "deviance")
FM<-fitted(m2)
plot(x=FM, y=EM, xlab = "Ajustados", ylab = "Residuales normalizados")
abline(0,0, col="red", lwd= 3)
#Independence (residuals against treatment)
boxplot(EM~conn_sp$Treat, main="Tratamiento")
#Boxplot
conn_sp$Treat <- factor(conn_sp$Treat,
levels = c('NI','I'),ordered = TRUE)
ggplot(data = conn_sp, mapping = aes(x = Treat, y = P, fill=Treat), lwd= 1.2) + labs(y="Number of path per species")+
geom_boxplot()+ scale_fill_manual(values=c("cornflowerblue","orange2"))+
theme(panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line (colour = "black",linetype = "solid", size = 1 ),
axis.title = element_text(size= 25),
axis.text= element_text(size= 18, colour = "black"),
legend.title = element_text(size = 15),
legend.text =  element_text(size= 5),
legend.key.size = unit(2, 'cm'),
strip.background = element_rect(colour="white", fill="white",
size=0.5, linetype="dashed"))
#Prop of paths per species
library(glmmTMB)
m3<-glmmTMB(Prop_path~ Treat + ( 1| plantesName),beta_family(link = "logit"), data = conn_sp)
summary(m3)
#Homogeneity
EM<-resid(m3, type= "pearson")
FM<-fitted(m3)
plot(x=FM, y=EM, xlab = "Ajustados", ylab = "Residuales normalizados")
abline(0,0, col="red", lwd= 3) #da lindo
#Independence (residuals against treatment)
boxplot(EM~conn_sp$Treat, main="Tratamiento")
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#                      NI TREATMENT
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#upload matrix
NI<- read.csv("Paths_NI.csv", sep=",", row.names = 1)
NI_disp <- read.csv("/Users/agustin/Documents/GitHub/Multilayer_Ecology-letters/Data/NI_disp.csv", sep=",",row.names=1)
tot_disp = nrow(NI_disp) #denominator of the proportion
#upload matrix
NI<- read.csv("Paths_NI.csv", sep=",", row.names = 1)
NI_disp <- read.csv("/Users/agustin/Documents/GitHub/Multilayer_Ecology-letters/Data/NI_disp.csv", sep=",",row.names=1)
tot_disp = nrow(NI_disp) #denominator of the proportion
NI_pol_ind<-NI %>%
mutate(Num_int = rowSums(NI, na.rm=TRUE),
Prop_int = Num_int / tot_disp) %>%
select(Num_int,Prop_int)
library(tidyverse)
NI_pol_ind<-NI %>%
mutate(Num_int = rowSums(NI, na.rm=TRUE),
Prop_int = Num_int / tot_disp) %>%
select(Num_int,Prop_int)
NI_pol_ind <- cbind(Treat = rep("NI",nrow(NI_pol_ind)), Species = rownames(NI_pol_ind),NI_pol_ind)
rownames(NI_pol_ind) = NULL
View(NI_pol_ind)
NI <- t(NI) # transpose the matrix to consider the seed disperser as rows
NI<-as.data.frame(NI)
View(NI)
NI_pol <- read.csv("/Users/agustin/Documents/GitHub/Multilayer_Ecology-letters/Data/NI_pol.csv", sep=",",row.names=1)
tot_pol = nrow(NI_pol) #denominator of the proportion
NI_seeddisp_ind<-NI %>%
mutate(Num_int = rowSums(NI, na.rm=TRUE),
Prop_int = Num_int / tot_pol) %>%
select(Num_int,Prop_int)
NI_seeddisp_ind <- cbind(Treat = rep("NI",nrow(NI_seeddisp_ind)), Species = rownames(NI_seeddisp_ind),NI_seeddisp_ind)
rownames(NI_seeddisp_ind) = NULL
View(NI_seeddisp_ind)
#upload matrix
I<- read.csv("Paths_I.csv", sep=",", row.names = 1)
I_disp <- read.csv("/Users/agustin/Documents/GitHub/Multilayer_Ecology-letters/Data/I_disp.csv", sep=",",row.names=1)
tot_disp = nrow(I_disp)
I_pol_ind<-I %>%
mutate(Num_int = rowSums(I, na.rm=TRUE),
Prop_int = Num_int / tot_disp) %>%
select(Num_int,Prop_int)
I_pol_ind <- cbind(Treat = rep("I",nrow(I_pol_ind)),Species = rownames(I_pol_ind),I_pol_ind)
rownames(I_pol_ind) = NULL
View(NI_seeddisp_ind)
I <- t(I) # transpose the matrix to consider the seed disperser as rows
I<-as.data.frame(I)
I_pol <- read.csv("/Users/agustin/Documents/GitHub/Multilayer_Ecology-letters/Data/I_pol.csv", sep=",",row.names=1)
tot_pol = nrow(I_pol) #denominator of the proportion
I_seeddisp_ind<-I %>% #calculate num of paths and prop.
mutate(Num_int = rowSums(I, na.rm=TRUE),
Prop_int = Num_int / tot_pol) %>%
select(Num_int,Prop_int)
I_seeddisp_ind <- cbind(Treat = rep("I",nrow(I_seeddisp_ind)), Species = rownames(I_seeddisp_ind),I_seeddisp_ind)
rownames(I_seeddisp_ind) = NULL
View(I_seeddisp_ind)
Pol_indirect <-rbind(NI_pol_ind,I_pol_ind) #paths per pollinator species for both treatments
Pol_par<-Pol_indirect %>%
group_by(Treat) %>%
summarise(Num_mean = mean(Num_int),
sd = sd(Num_int),
n = n(),
Num_se = sd / sqrt(n),
Prop_mean = mean(Prop_int),
sd = sd(Prop_int),
n = n(),
Prop_int_se = sd / sqrt(n))
View(Pol_par)
View(Pol_indirect)
Disp_indirect <-rbind(NI_seeddisp_ind,I_seeddisp_ind)#paths per seed disperser species for both treatments
View(Disp_indirect)
View(I_pol)
library (vegan)
library(ggplot2)
library(lme4)
library(glmmTMB)
library("stats4")
library("bbmle")
#Number of path per pollinator species --
m1<- glmer (Num_int ~ Treat + ( 1| Species), family = poisson(link="log"), data = Pol_indirect)
summary(m1)
#check overdispersion
overdisp_fun<- function(model) {
## number of variance parameters in an n-by-n variance-covariance matrix
vpars<- function(m) {
nrow(m)*(nrow(m)+1)/2
}
model.df<- sum(sapply(VarCorr(model),vpars))+length(fixef(model))
(rdf<- nrow(model@frame)-model.df)
rp<- residuals(model)
Pearson.chisq<- sum(rp^2)
prat<- Pearson.chisq/rdf
pval<- pchisq(Pearson.chisq, df=rdf, lower.tail=FALSE,log.p=TRUE)
c(chisq=Pearson.chisq,ratio=prat,p=exp(pval))
}
overdisp_fun(m1)
#Homogeneity
EM<-resid(m1, type= "deviance")
FM<-fitted(m1)
plot(x=FM, y=EM, xlab = "Ajustados", ylab = "Residuales normalizados")
abline(0,0, col="red", lwd= 3) #da lindo
#Independence
boxplot(EM~Pol_indirect$Treat, main="Tratamiento")
##Proportion of paths per pollinator species
Pol_indirect_new <- Pol_indirect %>%
mutate(Prop_int=replace(Prop_int, Prop_int==1.00, 0.9999999)) %>%
mutate(Prop_int=replace(Prop_int, Prop_int==0.00, 0.0000001)) #the values have to be between 0 and 1
#Prepare dataframe
Pol_indirect_new <- Pol_indirect %>%
mutate(Prop_int=replace(Prop_int, Prop_int==1.00, 0.9999999)) %>%
mutate(Prop_int=replace(Prop_int, Prop_int==0.00, 0.0000001)) #the values have to be between 0 and 1
m2<-glmmTMB(Prop_int~ Treat + ( 1| Species),beta_family(link = "logit"), data = Pol_indirect_new)
summary(m2)
#Homogeneity
EM<-resid(m2, type= "pearson")
FM<-fitted(m2)
plot(x=FM, y=EM, xlab = "Ajustados", ylab = "Residuales normalizados")
abline(0,0, col="red", lwd= 3) #da lindo
#Independence
boxplot(EM~Pol_indirect_new$Treat, main="Tratamiento")
#Homogeneity
EM<-resid(m3, type= "deviance")
FM<-fitted(m3)
#Number of path per seed disperser species --
m3<- glmer (Num_int ~ Treat + ( 1| Species), family = poisson(link="log"), data = Disp_indirect)
summary(m3)
#check overdispersion
overdisp_fun(m3)
#Homogeneity
EM<-resid(m3, type= "deviance")
FM<-fitted(m3)
plot(x=FM, y=EM, xlab = "Ajustados", ylab = "Residuales normalizados")
abline(0,0, col="red", lwd= 3) #da lindo
##Proportion of paths per seed disperser species--
Disp_indirect_new <- Disp_indirect %>%
mutate(Prop_int=replace(Prop_int, Prop_int==1.00, 0.9999999)) %>%
mutate(Prop_int=replace(Prop_int, Prop_int==0.00, 0.0000001)) #the values have to be between 0 and 1
##Proportion of paths per seed disperser species--
Disp_indirect_new <- Disp_indirect %>%
mutate(Prop_int=replace(Prop_int, Prop_int==1.00, 0.9999999)) %>%
mutate(Prop_int=replace(Prop_int, Prop_int==0.00, 0.0000001))
m4<-glmmTMB(Prop_int~ Treat + ( 1| Species),beta_family(link = "logit"), data = Disp_indirect_new)
summary(m4)
#Homogeneity
EM<-resid(m4, type= "pearson")
FM<-fitted(m4)
plot(x=FM, y=EM, xlab = "Ajustados", ylab = "Residuales normalizados")
abline(0,0, col="red", lwd= 3) #da lindo
library(vegan)
#upload matrix
NI<- read.csv("Paths_NI.csv", sep=",", row.names = 1)
#NI<- read.csv("NI_dist.csv", sep=",", row.names = 1)
NI_disp <- read.csv("/Users/agustin/Documents/GitHub/Multilayer_Ecology-letters/Data/NI_disp.csv", sep=",",row.names=1)
tot_disp = nrow(NI_disp) #denominator of the proportion
NI_pol_ind<-NI %>% #calculate num of paths and prop.
mutate(Num_int = rowSums(NI, na.rm=TRUE),
Prop_int = Num_int / tot_disp) %>%
select(Num_int,Prop_int)
NI_pol_ind <- cbind(Treat = rep("NI",nrow(NI_pol_ind)), Species = rownames(NI_pol_ind),NI_pol_ind)
rownames(NI_pol_ind) = NULL
NI<- read.csv("NI_dist.csv", sep=",", row.names = 1)
NI_disp <- read.csv("/Users/agustin/Documents/GitHub/Multilayer_Ecology-letters/Data/NI_disp.csv", sep=",",row.names=1)
tot_disp = nrow(NI_disp) #denominator of the proportion
X_NI_pol_ind<-NI %>% #calculate num of paths and prop.
mutate(Num_int = rowSums(NI, na.rm=TRUE),
Prop_int = Num_int / tot_disp) %>%
select(Num_int,Prop_int)
X_NI_pol_ind <- cbind(Treat = rep("NI",nrow(X_NI_pol_ind)), Species = rownames(X_NI_pol_ind),X_NI_pol_ind)
rownames(NI_pol_ind) = NULL
View(X_NI_pol_ind)
View(NI_pol_ind)
X_NI_pol_ind <- cbind(Treat = rep("NI",nrow(X_NI_pol_ind)), Species = rownames(X_NI_pol_ind),X_NI_pol_ind)
rownames(X_NI_pol_ind) = NULL
View(X_NI_pol_ind)
NI<- read.csv("NI_dist.csv", sep=",", row.names = 1)
NI_disp <- read.csv("/Users/agustin/Documents/GitHub/Multilayer_Ecology-letters/Data/NI_disp.csv", sep=",",row.names=1)
tot_disp = nrow(NI_disp) #denominator of the proportion
X_NI_pol_ind<-NI %>% #calculate num of paths and prop.
mutate(Num_int = rowSums(NI, na.rm=TRUE),
Prop_int = Num_int / tot_disp) %>%
select(Num_int,Prop_int)
X_NI_pol_ind <- cbind(Treat = rep("NI",nrow(X_NI_pol_ind)), Species = rownames(X_NI_pol_ind),X_NI_pol_ind)
rownames(X_NI_pol_ind) = NULL
View(X_NI_pol_ind)
X_NI_pol_ind<-NI %>% #calculate num of paths and prop.
mutate(Num_int = rowSums(NI, na.rm=TRUE),
Prop_int = Num_int / tot_disp) %>%
filter(Num_int>0) %>%
select(Num_int,Prop_int)
X_NI_pol_ind <- cbind(Treat = rep("NI",nrow(X_NI_pol_ind)), Species = rownames(X_NI_pol_ind),X_NI_pol_ind)
rownames(X_NI_pol_ind) = NULL
NI <- t(NI) # transpose the matrix to consider the seed disperser as rows
NI<-as.data.frame(NI)
NI_pol <- read.csv("/Users/agustin/Documents/GitHub/Multilayer_Ecology-letters/Data/NI_pol.csv", sep=",",row.names=1)
tot_pol = nrow(NI_pol) #denominator of the proportion
NI_seeddisp_ind<-NI %>% #calculate num of paths and prop.
mutate(Num_int = rowSums(NI, na.rm=TRUE),
Prop_int = Num_int / tot_pol) %>%
select(Num_int,Prop_int)
NI_seeddisp_ind <- cbind(Treat = rep("NI",nrow(NI_seeddisp_ind)), Species = rownames(NI_seeddisp_ind),NI_seeddisp_ind)
rownames(NI_seeddisp_ind) = NULL
View(NI_seeddisp_ind)
#upload matrix
NI<- read.csv("Paths_NI.csv", sep=",", row.names = 1)
NI_disp <- read.csv("/Users/agustin/Documents/GitHub/Multilayer_Ecology-letters/Data/NI_disp.csv", sep=",",row.names=1)
tot_disp = nrow(NI_disp) #denominator of the proportion
NI_pol_ind<-NI %>% #calculate num of paths and prop.
mutate(Num_int = rowSums(NI, na.rm=TRUE),
Prop_int = Num_int / tot_disp) %>%
select(Num_int,Prop_int)
NI_pol_ind <- cbind(Treat = rep("NI",nrow(X_NI_pol_ind)), Species = rownames(X_NI_pol_ind),X_NI_pol_ind)
rownames(X_NI_pol_ind) = NULL
View(NI_pol_ind)
NI_pol_ind <- cbind(Treat = rep("NI",nrow(NI_pol_ind)), Species = rownames(NI_pol_ind),NI_pol_ind)
rownames(NI_pol_ind) = NULL
NI_pol_ind<-NI %>% #calculate num of paths and prop.
mutate(Num_int = rowSums(NI, na.rm=TRUE),
Prop_int = Num_int / tot_disp) %>%
select(Num_int,Prop_int)
NI_pol_ind <- cbind(Treat = rep("NI",nrow(NI_pol_ind)), Species = rownames(NI_pol_ind),NI_pol_ind)
rownames(NI_pol_ind) = NULL
#upload the matrix
NI<-read.csv("Paths_diss_NI.csv", row.names = 1)#matrix containing presence/absence of indirect paths between pollinator and seed disp after preparing the dataframe to calculate dissimilarity with the other treatment (same rows and columns)
NI<-as.matrix(NI)
I<-read.csv("Paths_diss_I.csv", row.names = 1) #matrix containing presence/absence of indirect paths between pollinator and seed disp after preparing the dataframe to calculate dissimilarity with the other treatment (same rows and columns)
I<-as.matrix(I)
#upload the matrix
NI<-read.csv("Paths_diss_NI.csv", row.names = 1)#matrix containing presence/absence of indirect paths between pollinator and seed disp after preparing the dataframe to calculate dissimilarity with the other treatment (same rows and columns)
I<-read.csv("Paths_diss_I.csv", row.names = 1) #matrix containing presence/absence of indirect paths between pollinator and seed disp after preparing the dataframe to calculate dissimilarity with the other treatment (same rows and columns)
rownames(NI)==rownames(I)
#upload the matrix
NI<-read.csv("Paths_diss_NI.csv", row.names = 1)#matrix containing presence/absence of indirect paths between pollinator and seed disp after preparing the dataframe to calculate dissimilarity with the other treatment (same rows and columns)
NI<-as.matrix(NI)
I<-read.csv("Paths_diss_I.csv", row.names = 1) #matrix containing presence/absence of indirect paths between pollinator and seed disp after preparing the dataframe to calculate dissimilarity with the other treatment (same rows and columns)
I<-as.matrix(I)
#array
vNI<-array(as.matrix(NI))
vI<-array(as.matrix(I))
Intpol_disp<-rbind(vNI,vI)
Intpol_dispst<-sqrt(Intpol_disp) #standarize
DisIntpol_disp<- vegdist(Intpol_dispst, binary = TRUE, method = "jaccard") #calculate the distance matrix using jaccard index
DisIntpol_disp # 0.82 indicates that both communitties are dissimlar because 80% of indirect interactions were found in one community.
library(tidyverse)
#upload matrix
NI<- read.csv("Paths_NI.csv", sep=",", row.names = 1)
NI_disp <- read.csv("/Users/agustin/Documents/GitHub/Multilayer_Ecology-letters/Data/NI_disp.csv", sep=",",row.names=1)
tot_disp = nrow(NI_disp) #denominator of the proportion
NI_pol_ind<-NI %>% #calculate num of paths and prop.
mutate(Num_int = rowSums(NI, na.rm=TRUE),
Prop_int = Num_int / tot_disp) %>%
select(Num_int,Prop_int)
NI_pol_ind <- cbind(Treat = rep("NI",nrow(NI_pol_ind)), Species = rownames(NI_pol_ind),NI_pol_ind)
rownames(NI_pol_ind) = NULL
NI <- t(NI) # transpose the matrix to consider the seed disperser as rows
NI<-as.data.frame(NI)
NI_pol <- read.csv("/Users/agustin/Documents/GitHub/Multilayer_Ecology-letters/Data/NI_pol.csv", sep=",",row.names=1)
tot_pol = nrow(NI_pol) #denominator of the proportion
NI_seeddisp_ind<-NI %>% #calculate num of paths and prop.
mutate(Num_int = rowSums(NI, na.rm=TRUE),
Prop_int = Num_int / tot_pol) %>%
select(Num_int,Prop_int)
NI_seeddisp_ind <- cbind(Treat = rep("NI",nrow(NI_seeddisp_ind)), Species = rownames(NI_seeddisp_ind),NI_seeddisp_ind)
rownames(NI_seeddisp_ind) = NULL
#upload matrix
I<- read.csv("Paths_I.csv", sep=",", row.names = 1)
I_disp <- read.csv("/Users/agustin/Documents/GitHub/Multilayer_Ecology-letters/Data/I_disp.csv", sep=",",row.names=1)
tot_disp = nrow(I_disp)#denominator of the proportion
I_pol_ind<-I %>% #calculate num of paths and prop.
mutate(Num_int = rowSums(I, na.rm=TRUE),
Prop_int = Num_int / tot_disp) %>%
select(Num_int,Prop_int)
I_pol_ind <- cbind(Treat = rep("I",nrow(I_pol_ind)),Species = rownames(I_pol_ind),I_pol_ind)
rownames(I_pol_ind) = NULL
I <- t(I) # transpose the matrix to consider the seed disperser as rows
I<-as.data.frame(I)
I_pol <- read.csv("/Users/agustin/Documents/GitHub/Multilayer_Ecology-letters/Data/I_pol.csv", sep=",",row.names=1)
tot_pol = nrow(I_pol) #denominator of the proportion
I_seeddisp_ind<-I %>% #calculate num of paths and prop.
mutate(Num_int = rowSums(I, na.rm=TRUE),
Prop_int = Num_int / tot_pol) %>%
select(Num_int,Prop_int)
I_seeddisp_ind <- cbind(Treat = rep("I",nrow(I_seeddisp_ind)), Species = rownames(I_seeddisp_ind),I_seeddisp_ind)
rownames(I_seeddisp_ind) = NULL
Pol_indirect <-rbind(NI_pol_ind,I_pol_ind) #paths per pollinator species for both treatments
Disp_indirect <-rbind(NI_seeddisp_ind,I_seeddisp_ind)#paths per seed disperser species for both treatments
library (vegan)
library(ggplot2)
library(lme4)
library(glmmTMB)
library("stats4")
library("bbmle")
#Number of path per pollinator species --
m1<- glmer (Num_int ~ Treat + ( 1| Species), family = poisson(link="log"), data = Pol_indirect)
summary(m1)
#check overdispersion
overdisp_fun<- function(model) {
vpars<- function(m) {
nrow(m)*(nrow(m)+1)/2
}
model.df<- sum(sapply(VarCorr(model),vpars))+length(fixef(model))
(rdf<- nrow(model@frame)-model.df)
rp<- residuals(model)
Pearson.chisq<- sum(rp^2)
prat<- Pearson.chisq/rdf
pval<- pchisq(Pearson.chisq, df=rdf, lower.tail=FALSE,log.p=TRUE)
c(chisq=Pearson.chisq,ratio=prat,p=exp(pval))
}
overdisp_fun(m1)
#Homogeneity
EM<-resid(m1, type= "deviance")
FM<-fitted(m1)
plot(x=FM, y=EM, xlab = "Ajustados", ylab = "Residuales normalizados")
abline(0,0, col="red", lwd= 3)
#Independence
boxplot(EM~Pol_indirect$Treat, main="Tratamiento")
#Prepare dataframe
Pol_indirect_new <- Pol_indirect %>%
mutate(Prop_int=replace(Prop_int, Prop_int==1.00, 0.9999999)) %>%
mutate(Prop_int=replace(Prop_int, Prop_int==0.00, 0.0000001))
m2<-glmmTMB(Prop_int~ Treat + ( 1| Species),beta_family(link = "logit"), data = Pol_indirect_new)
summary(m2)
#Homogeneity
EM<-resid(m2, type= "pearson")
FM<-fitted(m2)
plot(x=FM, y=EM, xlab = "Ajustados", ylab = "Residuales normalizados")
abline(0,0, col="red", lwd= 3)
#Independence
boxplot(EM~Pol_indirect_new$Treat, main="Tratamiento")
#Number of path per seed disperser species --
m3<- glmer (Num_int ~ Treat + ( 1| Species), family = poisson(link="log"), data = Disp_indirect)
summary(m3)
#check overdispersion
overdisp_fun(m3)
#Homogeneity
EM<-resid(m3, type= "deviance")
FM<-fitted(m3)
plot(x=FM, y=EM, xlab = "Ajustados", ylab = "Residuales normalizados")
abline(0,0, col="red", lwd= 3)
#Independence
boxplot(EM~Disp_indirect$Treat, main="Tratamiento")
##Proportion of paths per seed disperser species--
Disp_indirect_new <- Disp_indirect %>%
mutate(Prop_int=replace(Prop_int, Prop_int==1.00, 0.9999999)) %>%
mutate(Prop_int=replace(Prop_int, Prop_int==0.00, 0.0000001))
m4<-glmmTMB(Prop_int~ Treat + ( 1| Species),beta_family(link = "logit"), data = Disp_indirect_new)
summary(m4)
#Homogeneity
EM<-resid(m4, type= "pearson")
FM<-fitted(m4)
plot(x=FM, y=EM, xlab = "Ajustados", ylab = "Residuales normalizados")
abline(0,0, col="red", lwd= 3)
#Independence
boxplot(EM~Disp_indirect_new$Treat, main="Tratamiento")
library(vegan)
#upload the matrix
NI<-read.csv("Paths_diss_NI.csv", row.names = 1)#matrix containing presence/absence of indirect paths between pollinator and seed disp after preparing the dataframe to calculate dissimilarity with the other treatment (same rows and columns)
NI<-as.matrix(NI)
I<-read.csv("Paths_diss_I.csv", row.names = 1) #matrix containing presence/absence of indirect paths between pollinator and seed disp after preparing the dataframe to calculate dissimilarity with the other treatment (same rows and columns)
I<-as.matrix(I)
#array
vNI<-array(as.matrix(NI))
vI<-array(as.matrix(I))
Intpol_disp<-rbind(vNI,vI)
Intpol_dispst<-sqrt(Intpol_disp) #standarize
DisIntpol_disp<- vegdist(Intpol_dispst, binary = TRUE, method = "jaccard") #calculate the distance matrix using jaccard index
DisIntpol_disp
